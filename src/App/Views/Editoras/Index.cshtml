@using X.PagedList.Mvc.Common;
@using X.PagedList.Mvc.Core;
@model X.PagedList.PagedList<EditoraViewModel>

@{
    ViewData["Title"] = "Editoras";
}

<h1>@ViewData["Title"]</h1>
<hr />

<p>
    <a class="btn btn-info" asp-action="Create" disable-by-role="Admin">Nova Editora</a>
</p>

@if (Model != null && Model.Count > 0)
{
    <table class="table table-hover">
        <thead class="thead-dark">
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.FirstOrDefault().Nome)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.FirstOrDefault().Ativo))
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Nome)
                    </td>
                    <td>
                        @this.FormataValorBooleano(item.Ativo)
                    </td>
                    <td class="text-right">
                        <a class="btn btn-warning" asp-controller="Editoras" asp-action="Details" asp-route-id="@item.Id"><spam class="fa fa-search"></spam> </a>
                        <a disable-by-role="Admin" class="btn btn-info" asp-controller="Editoras" asp-action="Edit" asp-route-id="@item.Id"><spam class="fa fa-pencil-alt"></spam> </a>
                        <a disable-by-role="Admin" class="btn btn-danger" asp-controller="Editoras" asp-action="Delete" asp-route-id="@item.Id"><spam class="fa fa-trash"></spam> </a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
    <div>
        <div style="float: right">
            Página @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) de @Model.PageCount
        </div>

        <div class="justify-content-center">
            @Html.PagedListPager(Model, pagina => Url.Action("Index", new { pagina }), new PagedListRenderOptions { FunctionToTransformEachPageLink = (liTag, aTag) => { aTag.Attributes.Add("class", "page-link".ToString()); return aTag; }, LiElementClasses = new[] { "page-item" }, UlElementClasses = new[] { "pagination  justify-content-center" } })
        </div>
    </div>
}
else
{
    <div class="alert alert-info" role="alert">
        <span>Não Há Registros</span>
    </div>
}


